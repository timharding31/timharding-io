{"version":3,"sources":["images/loading.gif","images/me/TIM_main.jpg","images/me/TIM_ski.jpg","images/gg_bridge.png","images/uss_constitution.png","components/header.jsx","components/sidebar/sidebar_link.jsx","components/sidebar/sidebar_nav.jsx","components/content/resume.jsx","components/content/about.jsx","components/content/projects.jsx","util/send_email.js","util/form_errors.jsx","util/form_successes.jsx","components/content/contact.jsx","components/main.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","gg","require","uss","className","id","style","backgroundImage","to","containerId","smooth","duration","href","target","text","activeClass","spy","hashSpy","useEffect","scroller","scrollTo","publishedUrl","visiblePdf","name","title","loading","document","querySelector","onClick","e","preventDefault","iframe","getElementById","src","location","main","alt","send","window","emailjs","baseTemplateParames","from_name","from_email","message","errors","length","map","error","successes","success","useState","setName","email","setEmail","setMessage","formErrors","setErrors","formSuccesses","setSuccesses","onSubmit","templateParams","sendEmail","type","value","placeholder","onChange","currentTarget","ski","App","basename","PUBLIC_URL","Boolean","hostname","match","config","addEventListener","ReactDOM","render","targetId","hash","substring","scrollIntoView","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.2988594d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.a748c174.gif\";","module.exports = __webpack_public_path__ + \"static/media/TIM_main.c84b39b1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/TIM_ski.704fefcd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gg_bridge.e8a122bd.png\";","module.exports = __webpack_public_path__ + \"static/media/uss_constitution.ccba7dc6.png\";","import React from 'react';\nimport { Link } from 'react-scroll';\nconst gg = require('../images/gg_bridge.png');\nconst uss = require('../images/uss_constitution.png');\n\nexport default () => (\n  <header className=\"application-header\">\n    <div id=\"gg-overlay\" style={{ backgroundImage: `url(\"${gg}\")` }} />\n    <div className=\"header-wordmark\">\n      <h1><Link to=\"about\" containerId=\"application-body\" smooth={true} duration={500}>Tim Harding</Link></h1>\n      <p>Software Engineer</p>\n    </div>\n    <div id=\"header-buttons\">\n      {/* <i><Link to=\"/resume\"></Link></i>\n      <i><Link to=\"/linkedin\"></Link></i> */}\n      {/* <i><a href=\"https://www.linkedin.com/in/timharding31/\" target=\"_blank\"></a></i> */}\n      {/* <i><a href=\"https://github.com/timharding31\" target=\"_blank\"></a></i> */}\n    </div>\n    <div id=\"header-menu-trigger\">\n      <i></i>\n      <ul id=\"nav-dropdown\">\n        <li><i><a href=\"https://www.linkedin.com/in/timharding31/\" target=\"_blank\"></a></i></li>\n        <li><i><a href=\"https://github.com/timharding31\" target=\"_blank\"></a></i></li>\n        {/* <li><Link to=\"/about\">About Me</Link></li>\n        <li><Link to=\"/projects\">My Work</Link></li>\n        <li><Link to=\"/contact\">Contact</Link></li> */}\n      </ul>\n    </div>\n    <div id=\"uss-overlay\" style={{ backgroundImage: `url(\"${uss}\")` }} />\n  </header>\n)","import React from 'react';\nimport { Link } from 'react-scroll';\n\nexport default ({ to, text }) => {\n  return (\n    <Link\n      activeClass=\"active\"\n      to={to}\n      containerId='application-body'\n      spy={true}\n      hashSpy={true}\n      smooth={true}\n      duration={500}>\n      {text}\n    </Link>\n    )\n}","import React, { useState, useEffect } from 'react';\n// import { useLocation } from 'react-router-dom';\nimport SidebarLink from './sidebar_link';\nimport { scroller } from 'react-scroll';\n\nexport default () => {\n  // const [urlPath, setUrlPath] = useState();\n  // const usePath = () => {\n  //   let location = useLocation();\n  //   let newPath = (location.hash === '') ? '#about' : location.hash;\n  //   console.log(location)\n  //   useEffect(() => {\n  //     setUrlPath(newPath)\n  //   }, [location, newPath]);\n  // }\n  // usePath();\n  useEffect(() => {\n    scroller.scrollTo('about', { containerId: 'application-body', smooth: true, duration: 0, spy: true, hashSpy: true})\n  }, []);\n  return (\n    <ul id=\"body-nav\">\n      <li><SidebarLink to={'about'} text={'About Me'} /></li>\n      <li><SidebarLink to={'projects'} text={'My Work'} /></li>\n      <li><SidebarLink to={'resume'} text={'Résumé'} /></li>\n      <li><SidebarLink to={'contact'} text={'Contact'} /></li>\n    </ul>)\n}","import React from 'react';\nimport { Element } from 'react-scroll';\nimport loading from '../../images/loading.gif';\n\nexport default () => {\n  const publishedUrl = 'https://docs.google.com/document/d/1p7yrvETUEppW3Gct_74sw0XHhH9reLlhcy3zHn-Ff2g/export?format=pdf';\n  const visiblePdf = `https://docs.google.com/viewer?url=${publishedUrl}&embedded=true`;\n  const downloadResume = () => {\n    document.location = publishedUrl;\n  }\n\n  const reloadIframe = (e) => {\n    e.preventDefault();\n    const iframe = document.getElementById('resume-iframe');\n    iframe.src = iframe.src;\n    // iframe.contentDocument.location.reload(true);\n  }\n\n  return (\n    <Element name={'resume'} title={'Resume'} id=\"resume\">\n      <div id=\"resume-iframe-container\" style={{ backgroundImage: `url(\"${loading}\")` }}>\n        {(document.querySelector('input[id^=\"apiproxy\"]')) ? null : <button className=\"resume-reload-button\" onClick={reloadIframe}><i></i></button>}\n          <iframe id=\"resume-iframe\" src={visiblePdf}></iframe>\n      </div>\n      <button onClick={downloadResume}>Download<i></i></button>\n    </Element>\n)}\n","import React from 'react';\nimport { Element } from 'react-scroll';\nimport main from '../../images/me/TIM_main.jpg';\n\nexport default () => {\n\n  return (\n    <>\n    <Element name={'about'} title={'About Me'} id='about'>\n      <div className=\"about-img\">\n        <img src={main} alt=\"Tim Harding\"/>\n      </div>\n      <div className=\"about-text\">\n        <h1>Hi, my name is <strong>Tim Harding</strong></h1>\n        <p>I'm a Software Engineer in San Francisco...</p>\n      </div>\n    </Element>\n    </>\n  )\n}\n","import React from 'react';\nimport { Element } from 'react-scroll';\n\nexport default () => {\n\n  return (\n    <Element name={'projects'} title={'My Work'} id='projects'>\n        <h1>My Work</h1>\n    </Element>\n  )\n}\n","const send = window.emailjs.send;\nconst serviceId = 'service_nzlh4us';\nconst templateId = 'template_v890nzg';\nconst baseTemplateParames = {\n  from_name: 'Test Name',\n  from_email: 'test@example.com',\n  message: 'test test test test test.'\n}\n\nexport default (templateParams=baseTemplateParames) => {\n  send(\n    serviceId,\n    templateId,\n    templateParams\n  )\n}\n\n\n","import React from 'react';\n\nexport default ({ errors }) => {\n  // if (errors.length === 0) return null;\n\n  return (\n    <>\n      {errors.length === 0 ? null : errors.map(error => <p className=\"form-error\">{error}</p>)}\n    </>\n  )\n}","import React from 'react';\n\nexport default ({ successes }) => {\n  // if (successes.length === 0) return null;\n\n  return (\n    <>\n      {successes.length === 0 ? null : successes.map(success => <p className=\"form-success\">{success}</p>)}\n    </>\n  )\n}","import React, { useState } from 'react';\nimport { Element } from 'react-scroll';\nimport sendEmail from '../../util/send_email';\nimport FormErrors from '../../util/form_errors';\nimport FormSuccesses from '../../util/form_successes';\nimport ski from '../../images/me/TIM_ski.jpg';\n// const nodemailer = require(\"nodemailer\");\n// const { google } = require(\"googleapis\");\n// const OAuth2 = google.auth.OAuth2;\n\nexport default () => {\n  let [name, setName] = useState('');\n  let [email, setEmail] = useState('');\n  let [message, setMessage] = useState('');\n  let [formErrors, setErrors] = useState([]);\n  let [formSuccesses, setSuccesses] = useState([]);\n\n  const changeName = (e) => {\n    e.preventDefault();\n    setName(e.currentTarget.value);\n    setErrors([]); setSuccesses([]);\n  }\n  const changeEmail = (e) => {\n    e.preventDefault();\n    setEmail(e.currentTarget.value);\n    setErrors([]); setSuccesses([]);\n  }\n  const changeMessage = (e) => {\n    e.preventDefault();\n    setMessage(e.currentTarget.value);\n    setErrors([]); setSuccesses([]);\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (name && email && message) {\n      const templateParams = { from_name: name, from_email: email, message };\n      sendEmail(templateParams);\n      setSuccesses(['Thanks for your message, I\\'ll be in touch shortly!'])\n      setName(''); setEmail(''); setMessage('');\n    } else {\n      setErrors(['Please fill out all fields continue.']);\n    }\n  }\n\n  return (\n    <Element name={'contact'} title={'Contact'} id='contact'>\n      <div className=\"form-text\">\n      <h1>Send me an email: </h1>\n      <div className=\"form-feedback\">\n        <FormErrors errors={formErrors} />\n        <FormSuccesses successes={formSuccesses} />\n      </div>\n      <form className=\"contact-form\" onSubmit={handleSubmit}>\n        <div className=\"contact-form-row-one\">\n        <input type=\"text\" value={name} placeholder=\"Name\" onChange={changeName}/>\n        <input type=\"email\" value={email} placeholder=\"Email\" onChange={changeEmail}/>\n        </div>\n        <div className=\"contact-form-row-two\">\n        <textarea value={message} placeholder=\"Message\" onChange={changeMessage}/>\n        </div>\n        <div className=\"contact-form-row-three\">\n          <button type=\"submit\">Send<i> </i></button>\n        </div>\n      </form>\n      </div>\n      <div className=\"form-img\">\n        <img src={ski} alt=\"Tim Harding\" />\n      </div>\n    </Element>\n  )\n}\n","import React from 'react';\nimport SidebarNav from './sidebar/sidebar_nav';\nimport { useEffect } from 'react';\nimport Resume from './content/resume';\nimport AboutMe from './content/about';\nimport MyWork from './content/projects';\nimport Contact from './content/contact';\n\n\nexport default () => (\n    <>\n      <aside className=\"application-sidebar\">\n        <SidebarNav />\n      </aside>\n      <section className=\"application-body\" id=\"application-body\">\n        <AboutMe />\n        <MyWork />\n        <Resume />\n        <Contact />\n      </section>\n    </>)","import React from 'react';\nimport './application.scss';\nimport { BrowserRouter } from 'react-router-dom';\nimport Header from './components/header';\nimport Main from './components/main';\n\nfunction App() {\n  return (\n    <BrowserRouter basename={window.PUBLIC_URL || null}>\n      <div className=\"application\">\n        <Header />\n        <Main />\n      </div>\n    </BrowserRouter >\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nrequire('dotenv').config();\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  ReactDOM.render(<App />, document.getElementById('root'));\n  const targetId = window.location.hash === '' ? 'about' : window.location.hash.substring(1);\n  const targetEle = document.getElementById(targetId);\n  targetEle.scrollIntoView(false);\n})\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}